# -*- coding: utf-8 -*-
"""
Created on Sat Oct  8 14:02:03 2022

@author: Dylan Bodkin

Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def main():
    fib_seq = [1,2]
    while fib_seq[-1] < 4e6:
        fib_seq.append(fib_seq[-2]+fib_seq[-1])
        if fib_seq[-3]%2 ==0:
            fib_seq.pop(-3)
    fib_seq.pop(-1)
    if fib_seq[-2]%2 == 0:
        fib_seq.pop(-2)
    if fib_seq[-1]%2 == 0:
        fib_seq.pop(-1)

    print(f'The sum of even-valued Fibonacci terms less than {4000000} is {sum(fib_seq)}.')
    return sum(fib_seq)

if __name__ == "__main__":
    main()
